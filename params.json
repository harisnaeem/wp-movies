{"name":"WordPress Movies Plugin","tagline":"Easily attach movie posters and other data from TMDb to your blog posts or events in WordPress","body":"===============\r\nWordPress Movies Plugin\r\n===============\r\n\r\nAttach data (including movie posters and backdrop images) from\r\nTheMovieDb.org to your posts or events in WordPress.\r\n\r\n\r\nInstallation\r\n============\r\n\r\nDownload this package and upload to plugins:\r\nhttps://github.com/zmcghee/wp-movies/archive/master.zip\r\n\r\nAfter you activate the plugin, configure it by going to the *Settings*\r\nscreen under the *Movies* menu in your admin dashboard. You'll need a\r\nTMDb API key, which you can get at http://www.themoviedb.org/documentation/api\r\n\r\n\r\nHow does it work?\r\n=================\r\n\r\nTo attach movie data to your posts, you use the *Import Tool* under the\r\n*Movies* menu in your admin dashboard. The tool suggests movie matches\r\nbased on your post titles.\r\n\r\nIf you want to filter by a specific post type, you can configure that in\r\n*Settings*, also in the *Movies* menu. For example, we use the Events\r\nCalendar (Pro) plugin, which sets events to a post type of ``tribe_events``.\r\n\r\nUnless you've configured it to do otherwise, the import tool will:\r\n\r\n* Import a backdrop image for the matching movie if one is available,\r\n  attach it to the post, and set it as the featured image.\r\n* Import a poster image for the matching movie if one is available and\r\n  attach it to the post. If no backdrop image was available, it will set\r\n  the poster image as the featured image.\r\n* Set a custom metadata field with the tmdb_id for the matching movie.\r\n* Store some other data about the movie that you can use in your theme's\r\n  templates (see below).\r\n\r\n\r\nWhat other data can I use in my templates?\r\n==========================================\r\n\r\nA basic example looks like::\r\n\r\n    $movie = new Movie( $post->ID );\r\n    if( $movie->title )\r\n        echo $movie->title;\r\n    if( $movie->genres )\r\n        echo implode(\", \", $movie->genres);\r\n\r\n\r\nProperties of every Movie object::\r\n\r\n    $movie->tmdb_id\r\n    $movie->title\r\n    $movie->year  # this is parsed from the tmdb release date (if found)\r\n    $movie->backdrop_path  # full url from your wp uploads dir\r\n    $movie->poster_path  # full url from your wp uploads dir\r\n    $movie->genres  # array in plain text, e.g. array('Action', 'Adventure')\r\n    $movie->imdb_id\r\n    $movie->runtime  # in minutes, e.g. 121\r\n    $movie->languages  # array in plain text, e.g. array('English')\r\n    $movie->overview  # tmdb's text synopsis of movie\r\n\r\nAlthough every Movie object has these properties, they may be empty\r\ndepending on the source data. (If you haven't imported any movie data to\r\na post, conjuring a Movie object from that post will also return a valid\r\nMovie object with all empty values.)\r\n\r\n\r\nAbout This Version\r\n==================\r\n\r\nThis is the first version of this plugin. It hasn't been tested\r\nthoroughly, although so far it works for me. There is some code\r\ncleanup to be done, especially in the admin screens. I'd like to\r\nadd tests, I just have no experience with testing WP plugins.\r\n\r\n\r\nCredits & License\r\n=================\r\n\r\nThis package is licensed under the BSD license. A copy of this license\r\nis enclosed in license.txt. More information at http://opensource.org/licenses/bsd-license.php\r\n\r\nThis package includes pixelead0's TMDB API v3 PHP class, which in turn\r\nis based in part on Jonas De Smet's TMDb PHP API class. Both are BSD\r\nlicensed and redistributed here under the terms of that license.\r\n\r\nThis package also includes a function posted anonymously to Pastebin\r\nat http://pastebin.com/kgLt1RrG. My gratitude to its author.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}